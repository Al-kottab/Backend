// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  username     String   @unique
  email        String   @unique
  createdAt    DateTime
  passwordHash String
  phone        String?
  creditCard   String?
  photo        String?
  Student      Student?
  Teacher      Teacher?
}

model Student {
  id           Int            @id @unique
  user         User           @relation(fields: [id], references: [id])
  StudentBadge StudentBadge[]
  GroupStudent GroupStudent[]
}

model Teacher {
  id                  Int                   @id @unique
  user                User                  @relation(fields: [id], references: [id])
  Group               Group[]
  Organization        Organization[]
  OrganizationTeacher OrganizationTeacher[]
}

model Badge {
  id           Int            @id @default(autoincrement())
  name         String
  icon         String
  StudentBadge StudentBadge[]
}

model StudentBadge {
  student   Student @relation(fields: [studentId], references: [id])
  studentId Int
  badge     Badge   @relation(fields: [badgeId], references: [id])
  badgeId   Int

  @@id([studentId, badgeId])
}

model Organization {
  id                  Int                   @id @default(autoincrement())
  name                String                @unique
  createdAt           DateTime
  logo                String
  description         String
  creator             Teacher               @relation(fields: [creatorId], references: [id])
  creatorId           Int
  Group               Group[]
  OrganizationTeacher OrganizationTeacher[]
}

model Group {
  id             Int            @id @default(autoincrement())
  name           String
  createdAt      DateTime
  teacher        Teacher        @relation(fields: [teacherId], references: [id])
  teacherId      Int
  organization   Organization?  @relation(fields: [organizationId], references: [id])
  organizationId Int?
  GroupStudent   GroupStudent[]
}

model OrganizationTeacher {
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId Int
  teacher        Teacher      @relation(fields: [teacherId], references: [id])
  teacherId      Int

  @@id([organizationId, teacherId])
}

model GroupStudent {
  student   Student @relation(fields: [studentId], references: [id])
  studentId Int
  group     Group   @relation(fields: [groupId], references: [id])
  groupId   Int

  @@id([groupId, studentId])
}
